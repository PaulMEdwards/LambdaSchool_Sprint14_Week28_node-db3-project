{
	"info": {
		"_postman_id": "94816094-1404-4764-88e2-4a43a1c8be78",
		"name": "LS_Sp14_Wk28_node-db3-project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST",
			"item": [
				{
					"name": "POST /api/schemes (missing required data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6bd3b5-3913-4ebd-937c-93f56dae29a5",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(500);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.scheme).to.be.undefined;",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.message).to.equal(\"Failed to create new scheme\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/schemes (missing required data)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "41"
								},
								{
									"key": "ETag",
									"value": "W/\"29-cQCjYpsG/ryGaGrTVS1Rhf/0iNA\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 10:23:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Failed to create new scheme\"\n}"
						}
					]
				},
				{
					"name": "POST /api/schemes (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.id).to.be.at.least(6);",
									"});",
									"",
									"//Store generated account ID for reuse in subsequent tests",
									"var sid = res.id;",
									"pm.collectionVariables.set(\"SchemeID\", sid);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"scheme_name\": \"Test Scheme\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/schemes (valid)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"scheme_name\": \"Test Scheme\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "36"
								},
								{
									"key": "ETag",
									"value": "W/\"24-nreeVn7LP1L7xvaL/izl5i9aFDE\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 10:37:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 7,\n    \"scheme_name\": \"Test Scheme\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "GET /api/schemes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0f3c8ca-fcc2-4eb5-a6c9-b6e40e6eba58",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.length).to.be.at.least(6);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res[6].scheme_name).to.equal(\"Test Scheme\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/schemes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "299"
								},
								{
									"key": "ETag",
									"value": "W/\"12b-0sKYt6ItV+OkZzZWwdDwPbj9wqc\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 10:38:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"scheme_name\": \"World Domination\"\n    },\n    {\n        \"id\": 2,\n        \"scheme_name\": \"Get Rich Quick\"\n    },\n    {\n        \"id\": 3,\n        \"scheme_name\": \"Revenge\"\n    },\n    {\n        \"id\": 4,\n        \"scheme_name\": \"More Instagram Followers\"\n    },\n    {\n        \"id\": 5,\n        \"scheme_name\": \"Find the Holy Grail\"\n    },\n    {\n        \"id\": 6,\n        \"scheme_name\": \"Steal Coworker's Identity\"\n    },\n    {\n        \"id\": 7,\n        \"scheme_name\": \"Test Scheme\"\n    }\n]"
						}
					]
				},
				{
					"name": "GET /api/schemes/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133dafd8-cfda-4da0-9b8a-3190d8c83402",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.scheme).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.message).to.equal(\"Could not find scheme with given id.\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/schemes/:id (not found)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-pWVIHeiIU7S7LF1FlWkvOyYBRYQ\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 10:42:58 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not find scheme with given id.\"\n}"
						}
					]
				},
				{
					"name": "GET /api/schemes/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.scheme_name).to.equal(\"Test Scheme\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes/{{SchemeID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes",
								"{{SchemeID}}"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/schemes/:id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes/{{SchemeID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes",
										"{{SchemeID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "36"
								},
								{
									"key": "ETag",
									"value": "W/\"24-nreeVn7LP1L7xvaL/izl5i9aFDE\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 10:44:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 7,\n    \"scheme_name\": \"Test Scheme\"\n}"
						}
					]
				},
				{
					"name": "GET /api/schemes/:id/steps",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res[1].scheme_name).to.equal(\"Get Rich Quick\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes/1/steps",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes",
								"1",
								"steps"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/schemes/:id/steps",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes/1/steps",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes",
										"1",
										"steps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "286"
								},
								{
									"key": "ETag",
									"value": "W/\"11e-LPvEGitqM7qB+VYhtwiNBoRq2PM\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 11:33:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"scheme_name\": \"World Domination\",\n        \"step_number\": 1,\n        \"instructions\": \"solve prime number theory\"\n    },\n    {\n        \"id\": 2,\n        \"scheme_name\": \"Get Rich Quick\",\n        \"step_number\": 2,\n        \"instructions\": \"crack cyber security\"\n    },\n    {\n        \"id\": 3,\n        \"scheme_name\": \"Revenge\",\n        \"step_number\": 3,\n        \"instructions\": \"blackmail world leaders\"\n    }\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "PUT /api/schemes/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b849a9d-5d2f-4e2e-8525-e98fabc2ebd1",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not find scheme with given id\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"scheme_name\": \"Test Scheme Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/schemes/:id (not found)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"scheme_name\": \"Test Scheme Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "49"
								},
								{
									"key": "ETag",
									"value": "W/\"31-O7CbKRGUnvRAyQEJ+Q87varHXVw\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 10:46:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not find scheme with given id\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/schemes/:id (missing required data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afa213a4-8aad-44b4-baa1-50a06be4fe81",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 400 Bad Request', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(pm.response.status).to.equal(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Required data missing\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes/{{SchemeID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes",
								"{{SchemeID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/schemes/:id (missing required data)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes/{{SchemeID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes",
										"{{SchemeID}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "ETag",
									"value": "W/\"23-k/F9z98s0+ugeNZx+iEQXV7rMp4\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 11:07:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Required data missing\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/schemes/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba7c0b18-8c9b-4035-a568-56f7abaf3129",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.id).to.equal(pm.collectionVariables.get('SchemeID'));",
									"    pm.expect(res.scheme_name).to.equal('Test Scheme Updated');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"scheme_name\": \"Test Scheme Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes/{{SchemeID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes",
								"{{SchemeID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/schemes/:id",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"scheme_name\": \"Test Scheme Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes/{{SchemeID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes",
										"{{SchemeID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "44"
								},
								{
									"key": "ETag",
									"value": "W/\"2c-jAoffdIR/ifP6Lf6yhvn/4sdEho\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 11:09:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 7,\n    \"scheme_name\": \"Test Scheme Updated\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "DELETE /api/schemes/:id (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a76ad4c8-5756-43a8-a71d-98c639ad7158",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not find scheme with given id\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/schemes/:id (not found)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "49"
								},
								{
									"key": "ETag",
									"value": "W/\"31-O7CbKRGUnvRAyQEJ+Q87varHXVw\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 10:29:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not find scheme with given id\"\n}"
						}
					]
				},
				{
					"name": "DELETE /api/schemes/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9412206e-ff39-4881-a557-4eb1e3307710",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ff5472e0-ad9e-406b-84d4-0b1cd9ac8bec",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.removed).to.equal(pm.collectionVariables.get('SchemeID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/schemes/{{SchemeID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"schemes",
								"{{SchemeID}}"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/schemes/:id",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/schemes/{{SchemeID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"schemes",
										"{{SchemeID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "13"
								},
								{
									"key": "ETag",
									"value": "W/\"d-XBw/cfBtoCC8asJcF7TCALIwS8w\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Feb 2020 11:18:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"removed\": 8\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "81005885-9980-4e6e-b9bf-0043d8f3b03c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d4f0b23e-bbbf-4e4e-9654-506bc8e3d5e8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "5b71c4d4-05da-4b8a-b860-c90c97ea910b",
			"key": "SchemeID",
			"value": 9,
			"type": "number"
		}
	],
	"protocolProfileBehavior": {}
}